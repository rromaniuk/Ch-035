<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd">

	<tx:annotation-driven />

	<context:property-placeholder location="classpath:db/postgresql.properties"
		system-properties-mode="OVERRIDE" />

	<jdbc:initialize-database data-source="dataSource"
		enabled="${database.init}">
		<jdbc:script location="classpath:db/${jdbc.initLocation}" />
		<jdbc:script encoding="utf-8" location="classpath:db/populateDB.sql" />
	</jdbc:initialize-database>

	<bean class="com.crsms.util.DbPopulator">
		<constructor-arg name="scriptLocation" value="classpath:db/populateDB.sql" />
	</bean>

	<context:component-scan base-package="com.crsms.**.repository" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${database.driverClassName}" p:url="${database.url}"
		p:username="${database.username}" p:password="${database.password}" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:packagesToScan="com.crsms.**.domain">
		<property name="jpaPropertyMap">
			<map>
				<entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}"
					value="${hibernate.format_sql}" />
				<entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}"
					value="${hibernate.use_sql_comments}" />
				<entry
					key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}"
					value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory" />
				<entry
					key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}"
					value="true" />
				<entry
					key="#{T(org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory).NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME}"
					value="cache/ehcache.xml" />
				 <entry key="hibernate.hbm2ddl.auto" value="create-drop" /> 
				<entry key="javax.persistence.schema-generation.scripts.action"
					value="drop-and-create" />
				<entry key="javax.persistence.schema-generation.scripts.create-target"
					value="src/main/resources/ddl/create.ddl" />
				<entry key="javax.persistence.schema-generation.scripts.drop-target"
					value="src/main/resources/ddl/drop.ddl" />
			</map>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL9Dialect" />
			</bean>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

</beans> 